clinic2<-data.frame(t(clinic2))[-1,]
View(clinic2)
rownames(clinic2)<-clinic2$V1
clinic2<-data.frame(t(clinic2))[-1,]
clinic2$sampleID<-rownames(clinic2)
clinic2$sampleID<-gsub("-",".",clinic2$sampleID)
clinic2$sampleID[1:3]
View(clinic2)
clinic2<-clinic1[c(162,7,48,50,56,22,24),]
rownames(clinic2)<-clinic2$V1
clinic2<-data.frame(t(clinic2))[-1,]
clinic2$sampleID<-rownames(clinic2)
clinic2$sampleID<-gsub("-",".",clinic2$sampleID)
clinic2$sampleID[1:3]
View(clinic2)
clinic7706=clinic2
save(DEGs,clinic7706,clinic11160,exprall,sampleInfo,MRscoreall,file = "../dataset/TCGA_results/TCGAMRegnesHeatmap.Rdata")
head(sampleInfo,3)
MRscoreall[1:3,1:3]
MRgenes[1:3,1:3]
MRgenes<-MRgenes.example
MRgenes[1:3,1:3]
MRgenes[1:3,1:4]
exprall[1:3,1:3]
cancer="STAD"
cancer="STAD"
MRgenes_1<-subset(MRgenes,Types==cancer)
meta_1<-subset(sampleInfo,Types==cancer)
expr_1<-data.frame(Gene=exprall$Gene,exprall[,colnames(expr_1)%in%meta_1$sampleID])
expr_1<-data.frame(Gene=exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
meta7706<-merge(sampleInfo,clinic7706,by="sampleID")
View(meta_1)
meta_1<-subset(meta7706,Types==cancer)
View(meta_1)
colnames(clinic7706)
colnames(clinic7706)=c("Age","Gender","Tumor_pt","Nodes_pn","Metastasis_pm","OS_status","OStime","sampleID")
ave(DEGs,clinic7706,clinic11160,exprall,sampleInfo,MRscoreall,file = "../dataset/TCGA_results/TCGAMRegnesHeatmap.Rdata")
save(DEGs,clinic7706,clinic11160,exprall,sampleInfo,MRscoreall,file = "../dataset/TCGA_results/TCGAMRegnesHeatmap.Rdata")
meta7706<-merge(sampleInfo,clinic7706,by="sampleID")
View(meta7706)
cancer="STAD"
MRgenes_1<-subset(MRgenes,Types==cancer)
meta_1<-subset(meta7706,Types==cancer)
expr_1<-data.frame(Gene=exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
expr_1<-data.frame(row.names = exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
epr<-t(expr_1)
epr<-data.frame(t(expr_1))
View(epr)
epr<-data.frame(sampleID=rownames(epr),expr)
epr<-data.frame(sampleID=rownames(epr),epr)
View(epr)
expr_1<-data.frame(row.names = exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
epr_1<-data.frame(t(expr_1))
epr_1<-data.frame(sampleID=rownames(epr_1),epr_1)
expr_1<-data.frame(row.names = exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
expr_1<-data.frame(t(expr_1))%>%
expr_1<-data.frame(sampleID=rownames(expr_1),expr_1)
tcgaMLdt_1<-merge(meta_1,expr_1)
View(expr_1)
expr_1<-data.frame(row.names = exprall$Gene,exprall[,colnames(exprall)%in%meta_1$sampleID])
epr_1<-data.frame(t(expr_1))
epr_1<-data.frame(sampleID=rownames(epr_1),epr_1)
tcgaMLdt_1<-merge(meta_1,expr_1vy="sampleID")
tcgaMLdt_1<-merge(meta_1,epr_1="sampleID")
View(epr_1)
View(meta_1)
tcgaMLdt_1<-merge(meta_1,epr_1,by="sampleID")
View(tcgaMLdt_1)
View(tcgaMLdt_1)
View(sampleInfo)
View(meta_1)
levels(factor(sampleInfo$Condition))
levels(factor(meta_1$Condition))
clinic11160$sampleID[1:3]
sampleInfo$sampleID1=str_sub(sampleInfo$sampleID,1,12)
clinic11160$sampleID1=clinic11160$sampleID
meta11160<-merge(sampleInfo,clinic7706,by="sampleID1")
clinic11160$sampleID1=clinic11160$sampleID
meta11160<-merge(sampleInfo,clinic7706,by="sampleID1")
sampleInfo$sampleID1=str_sub(sampleInfo$sampleID,1,12)
sampleInfo$sampleID1[1:3]
meta11160<-merge(sampleInfo,clinic11160,by="sampleID1")
exprall1<-exprall
colnames(exprall1)=str_sub(colnames(exprall1),1,12)
meta1_1<-subset(meta11160,Types==cancer)
expr1_1<-data.frame(row.names = exprall1$Gene,exprall1[,colnames(exprall1)%in%meta1_1$sampleID1])
epr1_1<-data.frame(t(expr1_1))
epr1_1<-data.frame(sampleID1=rownames(ep1r_1),epr1_1)
epr1_1<-data.frame(sampleID1=rownames(epr1_1),epr1_1)
tcgaMLdt1_1<-merge(meta1_1,epr1_1,by="sampleID")
tcgaMLdt1_1<-merge(meta1_1,epr1_1,by="sampleID1")
levels(factor(tcgaMLdt1_1$sampleID1))
levels(factor(tcgaMLdt1_1$Condition))
View(tcgaMLdt1_1)
View(meta_1)
View(meta1_1)
write.csv("../dataset/MRgene_selection/tcgaMLdt_STAD")
write.csv(tcgaMLdt1_1,"../dataset/MRgene_selection/tcgaMLdt_STAD",row.names = F)
write.csv(tcgaMLdt1_1,"../dataset/MRgene_selection/tcgaMLdt_STAD.csv",row.names = F)
View(tcgaMLdt1_1)
install.packages(c("Cairo", "customLayout", "showtext"))
install.packages(c("Cairo", "customLayout", "showtext"))
install.packages(c("Cairo", "customLayout", "showtext"))
setwd("../../signaturesAnalysis/LinuxFiles/")
library(tidyverse)
library(dplyr)
library(data.table)
library(ggthemes)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(viridis)
#Use the color scales in this package
#to make plots that are pretty,
#better represent your data, easier to read
#by those with colorblindness,
#and print well in grey scale.
library(reshape2)
library(gridExtra)
library(RColorBrewer)
library(grid)
library(showtext)
library(Cairo)
library(customLayout)
library(cowplot)
library(survival)
library(survminer)
options(stringsAsFactors = F)
cli<-fread("TCGA_clinical.csv")
colnames(cli)[1]<-"Tumor_Sample_ID"
MRS_score<-fread("MRscore_TCGA_Patients9359.csv")
MRS_score$Tumor_Sample_ID<-str_sub(MRS_score$Tumor_Sample_ID,1,12)
colnames(MRS_score)[1]<-"Tumor_Sample_ID"
MRS_expr<-fread("expr_MicroSignature_TMP_T.csv")
MRS_expr$Tumor_Sample_ID<-str_sub(MRS_expr$Tumor_Sample_ID,1,12)
head(MRS_score$Tumor_Sample_ID)
head(MRS_expr$Tumor_Sample_ID)
head(cli$Tumor_Sample_ID)
df<-merge(cli,MRS_expr,by="Tumor_Sample_ID")
df2<-merge(cli,MRS_score[,-c(2,4)],by="Tumor_Sample_ID")
dim(df)
colnames(df)[1:30]
expr<-df[,c(21:847)]
which(is.na(expr))
expr<-as.data.frame(lapply(expr,as.numeric))
surv<-df[,c(1:20)]
cli<-fread("TCGA_clinical.csv")
colnames(cli)[1]<-"Tumor_Sample_ID"
MRS_score<-fread("MRscore_TCGA_Patients9359.csv")
MRS_score$Tumor_Sample_ID<-str_sub(MRS_score$Tumor_Sample_ID,1,12)
colnames(MRS_score)[1]<-"Tumor_Sample_ID"
MRS_expr<-fread("expr_MicroSignature_TMP_T.csv")
MRS_expr$Tumor_Sample_ID<-str_sub(MRS_expr$Tumor_Sample_ID,1,12)
head(MRS_score$Tumor_Sample_ID)
head(MRS_expr$Tumor_Sample_ID)
View(cli)
head(cli$Tumor_Sample_ID)
df<-merge(cli,MRS_expr,by="Tumor_Sample_ID")
df2<-merge(cli,MRS_score[,-c(2,4)],by="Tumor_Sample_ID")
dim(df)
colnames(df)[1:30]
expr<-df[,c(21:847)]
which(is.na(expr))
expr<-as.data.frame(lapply(expr,as.numeric))
surv<-df[,c(1:20)]
group_data <- apply(expr, 2 , function(gene){
name <- colnames(gene)
gene <- unlist(gene)
group <- ifelse(gene >= median(gene), 'high', 'low')
names(group) <- name
return(group)
})
group_data <- as.data.frame(group_data, stringsAsFactors = F)
survival_dat <- data.frame(status = surv$OS,
time = surv$OS.time,
stringsAsFactors = F)
survival_dat_merge <- cbind(survival_dat,group_data)
View(survival_dat_merge)
checkGroup<-apply(survival_dat_merge,2 , function(gene){
facter_lenth<-length(levels(factor(gene)))
check<-ifelse(facter_lenth==1,facter_lenth,"Yes")
names(check)<-colnames(gene)
return(check)
})
checkGroup <- as.data.frame(checkGroup, stringsAsFactors = F)
covariates <- as.character(rownames(subset(checkGroup,checkGroup!=1)))
univ_formulas <- sapply(covariates,
function(x){
##print(x)
as.formula(paste('Surv(time, status)~', x))
})
univ_models<-list()
for (i in 3:788) {
univ_models[[i]]<-coxph(univ_formulas[[i]], data = survival_dat_merge)
}
names(univ_models)<-univ_formulas[3:788]
univ_models<-univ_models[-which(sapply(univ_models, is.null))]
# Extract data
univ_results <- lapply(univ_models[3:4],
function(x){
x <- summary(x)
p.value <- signif(x$wald["pvalue"], digits = 2)
beta <- signif(x$coef[1], digits = 2)
HR <- signif(x$coef[2], digits = 2)
HR.confint.lower <- signif(x$conf.int[,"lower .95"], 2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"], 2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res <- c(beta, HR, p.value)
names(res) <- c("coef", "HR (95% CI for HR)", "p.value")
return(res)
})
res_single <- as.data.frame(t(do.call(cbind, univ_results)))
table(res_single$p.value <= 0.01)
res_single <- res_single[res_single$p.value <= 0.01, ]
res_single <- res_single[order(res_single$p.value), ]
rownames(res_single) <- gsub('Surv.time..status....',"",rownames(res_single))
single_pick <-rownames(res_single)
single_pick
# 3. Cox regressison
## multi
fmla <- as.formula(paste0("Surv(time, status) ~",paste0(single_pick,collapse = '+')))
cox <- coxph(fmla, data = survival_dat_merge)#构建多因素生存模型
mutil_res<-summary(cox)
mutil_res_table<-as.data.frame(cbind(mutil_res$coefficients,mutil_res$conf.int[,-c(1,2)]))
rownames(mutil_res_table)<-gsub("low","",rownames(mutil_res$coefficients))
mutil_res_table<-subset(mutil_res_table,`Pr(>|z|)`<=0.05)
write.csv(mutil_res_table,"mutil_res_table.csv")
multi_pick<-rownames(mutil_res_table)
multi_pick
fmla <- as.formula(paste0("Surv(time, status) ~",paste0(multi_pick,collapse = '+')))
cox <- coxph(fmla, data = survival_dat_merge)#构建多因素生存模型
final_res<-summary(cox)
cox=step(cox,direction = "both")
install.packages("Cairo")
options(stringsAsFactors = F)
cli<-fread("TCGA_clinical.csv")
colnames(cli)[1]<-"Tumor_Sample_ID"
MRS_score<-fread("MRscore_TCGA_Patients9359.csv")
MRS_score$Tumor_Sample_ID<-str_sub(MRS_score$Tumor_Sample_ID,1,12)
colnames(MRS_score)[1]<-"Tumor_Sample_ID"
MRS_expr<-fread("expr_MicroSignature_TMP_T.csv")
MRS_expr$Tumor_Sample_ID<-str_sub(MRS_expr$Tumor_Sample_ID,1,12)
head(MRS_score$Tumor_Sample_ID)
head(MRS_expr$Tumor_Sample_ID)
head(cli$Tumor_Sample_ID)
df<-merge(cli,MRS_expr,by="Tumor_Sample_ID")
df2<-merge(cli,MRS_score[,-c(2,4)],by="Tumor_Sample_ID")
dim(df)
colnames(df)[1:30]
expr<-df[,c(21:847)]
which(is.na(expr))
expr<-as.data.frame(lapply(expr,as.numeric))
surv<-df[,c(1:20)]
group_data <- apply(expr, 2 , function(gene){
name <- colnames(gene)
gene <- unlist(gene)
group <- ifelse(gene >= median(gene), 'high', 'low')
names(group) <- name
return(group)
})
group_data <- as.data.frame(group_data, stringsAsFactors = F)
survival_dat <- data.frame(status = surv$OS,
time = surv$OS.time,
stringsAsFactors = F)
survival_dat_merge <- cbind(survival_dat,group_data)
checkGroup<-apply(survival_dat_merge,2 , function(gene){
facter_lenth<-length(levels(factor(gene)))
check<-ifelse(facter_lenth==1,facter_lenth,"Yes")
names(check)<-colnames(gene)
return(check)
})
checkGroup <- as.data.frame(checkGroup, stringsAsFactors = F)
checkGroup
head(check)
head(checkGroup)
covariates <- as.character(rownames(subset(checkGroup,checkGroup!=1)))
univ_formulas <- sapply(covariates,
function(x){
##print(x)
as.formula(paste('Surv(time, status)~', x))
})
univ_models<-list()
for (i in 3:788) {
univ_models[[i]]<-coxph(univ_formulas[[i]], data = survival_dat_merge)
}
names(univ_models)<-univ_formulas[3:788]
univ_models<-univ_models[-which(sapply(univ_models, is.null))]
# Extract data
univ_results <- lapply(univ_models[3:4],
function(x){
x <- summary(x)
p.value <- signif(x$wald["pvalue"], digits = 2)
beta <- signif(x$coef[1], digits = 2)
HR <- signif(x$coef[2], digits = 2)
HR.confint.lower <- signif(x$conf.int[,"lower .95"], 2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"], 2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res <- c(beta, HR, p.value)
names(res) <- c("coef", "HR (95% CI for HR)", "p.value")
return(res)
})
res_single <- as.data.frame(t(do.call(cbind, univ_results)))
table(res_single$p.value <= 0.01)
res_single <- res_single[res_single$p.value <= 0.01, ]
res_single <- res_single[order(res_single$p.value), ]
rownames(res_single) <- gsub('Surv.time..status....',"",rownames(res_single))
single_pick <-rownames(res_single)
single_pick
# ref:https://blog.csdn.net/weixin_43249695/article/details/102913239
library(survival)
library(survminer)
library(reshape2)
library(data.table)
library(stringr)
library(reshape2)
library(dplyr)
library(plyr)
library(survivalROC)
library(forestplot)
options(stringsAsFactors = F)
cli<-fread("../dataset/TCGA_data/TCGA_clinical.csv")
setwd("../../Git/")
cli<-fread("../dataset/TCGA_data/TCGA_clinical.csv")
colnames(cli)[1]<-"Tumor_Sample_ID"
rownames(cli)<-cli$Tumor_Sample_ID
MRS_expr<-fread("../dataset/TCGA_data/expr_MicroSignature_TMP_T.csv")
MRS_expr$Tumor_Sample_ID<-str_sub(MRS_expr$Tumor_Sample_ID,1,12)
head(cli$Tumor_Sample_ID)
MRS_expr<-MRS_expr[!duplicated(MRS_expr$Tumor_Sample_ID)]
rownames(MRS_expr)<-MRS_expr$Tumor_Sample_ID
head(MRS_expr$Tumor_Sample_ID)
cli_MRS_expr<-merge(cli[,1:4],MRS_expr,by="Tumor_Sample_ID")
cli_MRS_expr_cancers<-split.data.frame(cli_MRS_expr,cli_MRS_expr$type)
length(cli_MRS_expr_cancers)
cli_MRS_expr_cancers<-cli_MRS_expr_cancers[-which(sapply(cli_MRS_expr_cancers, nrow)<=100)]
sapply(cli_MRS_expr_cancers, nrow)
expr<-list()
surv<-list()
group_data<-list()
survival_dat<-list()
survival_dat_merge<-list()
checkGroup<-list()
covariates<-list()
View(cli_MRS_expr)
for (i in seq_len(length(cli_MRS_expr_cancers))) {
print(i)
expr[[i]]<-cli_MRS_expr_cancers[[i]][,c(5:831)]
rownames(expr[[i]])<-cli_MRS_expr_cancers[[i]]$Tumor_Sample_ID
which(is.na(expr[[i]]))
expr[[i]]<-as.data.frame(lapply(expr[[i]],as.numeric))
surv[[i]]<-cli_MRS_expr_cancers[[i]][,c(1:4)]
rownames(surv[[i]])<-cli_MRS_expr_cancers[[i]]$Tumor_Sample_ID
group_data[[i]] <- apply(expr[[i]], 2 , function(gene){
name <- colnames(gene)
gene <- unlist(gene)
group <- ifelse(gene >= median(gene), 'high', 'low')
names(group) <- name
return(group)
})
group_data[[i]] <- as.data.frame(group_data[[i]], stringsAsFactors = F)
survival_dat[[i]] <- data.frame(row.names = rownames(surv[[i]]),status = surv[[i]]$OS,
time = surv[[i]]$OS.time,
stringsAsFactors = F)
survival_dat_merge[[i]] <- cbind(survival_dat[[i]],group_data[[i]])
names(survival_dat_merge)[i]<-levels(factor(cli$type))[i]
checkGroup[[i]]<-apply(survival_dat_merge[[i]],2 , function(gene){
facter_lenth<-length(levels(factor(gene)))
check<-ifelse(facter_lenth==1,facter_lenth,"Yes")
names(check)<-colnames(gene)
return(check)
})
checkGroup[[i]] <- as.data.frame(checkGroup[[i]], stringsAsFactors = F)
covariates[[i]] <- as.character(rownames(subset(checkGroup[[i]],checkGroup[[i]]!=1)))
}
univ_formulas<-list()
for (i in seq_len(length(covariates))) {
univ_formulas[[i]] <- sapply(covariates[[i]],
function(x){
##print(x)
as.formula(paste('Surv(time, status)~', x))
})
}
univ_models<-list()
univ_results<-list()
res_single<-list()
single_pick<-list()
univ_models<-list()
#21,22 error
#error test:
# for (i in 3:765) {
#  univ_models[[i]]<-coxph(univ_formulas[[23]][[i]], data = survival_dat_merge[[23]])
# }
sapply(univ_formulas, length)
for (i in seq_len(length(univ_formulas))) {
print(paste0("i=",i))
univ_models[[i]]<-list()
for (j in 3:length(univ_formulas[[i]])){
print(paste0("j=",j))
univ_models[[i]][[j]]<-coxph(univ_formulas[[i]][[j]], data = survival_dat_merge[[i]])
}
names(univ_models[[i]])<-univ_formulas[[i]][3:length(univ_formulas[[i]])]
}
for (i in seq_len(length(univ_models))) {
print(i)
univ_models[[i]]<-univ_models[[i]][-which(sapply(univ_models[[i]], is.null))]
# Extract data
univ_results[[i]] <- lapply(univ_models[[i]],
function(x){
x <- summary(x)
p.value <- signif(x$wald["pvalue"], digits = 2)
beta <- signif(x$coef[1], digits = 2)
HR <- signif(x$coef[2], digits = 2)
HR.confint.lower <- signif(x$conf.int[,"lower .95"], 2)
HR.confint.upper <- signif(x$conf.int[,"upper .95"], 2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res <- c(beta, HR, p.value)
names(res) <- c("coef", "HR (95% CI for HR)", "p.value")
return(res)
})
}
for (i in seq_len(length(univ_results))) {
print(length(univ_results[[i]]))
}
for (i in seq_len(length(univ_results))) {
print(i)
res_single[[i]] <- as.data.frame(t(do.call(cbind, univ_results[[i]])))
table(res_single[[i]]$p.value <= 0.05)
res_single[[i]] <- res_single[[i]][res_single[[i]]$p.value <= 0.05, ]
res_single[[i]] <- res_single[[i]][order(res_single[[i]]$p.value), ]
rownames(res_single[[i]]) <- gsub('Surv.time..status....',"",rownames(res_single[[i]]))
single_pick[[i]] <-rownames(res_single[[i]])
names(single_pick)[i]<-levels(factor(cli$type))[i]
write.csv(res_single[[i]],paste0("../dataset/COX_results/KM_res_single_TCGA_",levels(factor(cli$type))[i],".csv"))
}
traceback()
# 3. Cox regressison
## multi
which(sapply(single_pick, is.null))
names(single_pick)
length(single_pick)
fmla<-list()
cox<-list()
mutil_res<-list()
mutil_res_table<-list()
multi_pick<-list()
final_res<-list()
riskScore<-list()
risk<-list()
multiCOX_risk_result<-list()
rt<-list()
roc<-list()
diff<-list()
pValue<-list()
fit<-list()
survival_dat_merge<-survival_dat_merge[names(single_pick)]
names(survival_dat_merge)
names(single_pick)
sapply(single_pick, length)
survival_dat_merge<-survival_dat_merge[which(sapply(single_pick, length)>10)]
single_pick<-single_pick[which(sapply(single_pick, length)>10)]
sapply(single_pick, length)
for (i in seq_len(length(single_pick))) {
print(i)
fmla[[i]] <- as.formula(paste0("Surv(time, status) ~",paste0(single_pick[[i]],collapse = '+')))
names(fmla)[i]<-names(single_pick)[i]
}
for (i in c(14:18)) {
print(i)
cox[[i]] <- coxph(fmla[[i]], data = survival_dat_merge[[i]])#构建多因素生存模型
mutil_res[[i]]<-summary(cox[[i]])
mutil_res_table[[i]]<-as.data.frame(cbind(mutil_res[[i]]$coefficients,mutil_res[[i]]$conf.int[,-c(1,2)]))
rownames(mutil_res_table[[i]])<-gsub("low","",rownames(mutil_res[[i]]$coefficients))
mutil_res_table[[i]]<-subset(mutil_res_table[[i]],`Pr(>|z|)`<=0.05)
write.csv(mutil_res_table[[i]],paste0("../dataset/COX_results/mutil_res_table_",names(fmla)[i],".csv"))
multi_pick[[i]]<-rownames(mutil_res_table[[i]])
names(multi_pick)[i]<-names(single_pick)[i]
fmla[[i]] <- as.formula(paste0("Surv(time, status) ~",paste0(multi_pick[[i]],collapse = '+')))
cox[[i]] <- coxph(fmla[[i]], data = survival_dat_merge[[i]])#构建多因素生存模型
final_res[[i]]<-summary(cox[[i]])
cox[[i]]=step(cox[[i]],direction = "both")
riskScore[[i]]=predict(cox[[i]],type="risk",newdata=survival_dat_merge[[i]])
risk[[i]]=as.vector(ifelse(riskScore[[i]]>1,"high","low"))
names(risk)[i]<-names(multi_pick)[i]
multiCOX_risk_result[[i]]<-cbind(id=rownames(cbind(survival_dat_merge[[i]][,1:2],riskScore[[i]],risk[[i]])),
cbind(survival_dat_merge[[i]][,1:2],riskScore[[i]],risk[[i]]))
write.csv(multiCOX_risk_result[[i]],paste0("../dataset/COX_results/mutation_model-multiCOX_risk_",names(survival_dat_merge)[i],".csv"))
rt[[i]]=read.csv(paste0("../dataset/COX_results/mutation_model-multiCOX_risk_",names(survival_dat_merge)[i],".csv"),check.names=F,row.names=1)
roc[[i]]=survivalROC(Stime=rt[[i]]$time, status=rt[[i]]$status, marker = rt[[i]]$riskScore,
predict.time =3, method="KM")
pdf(file=paste0("../dataset/COX_results/mutation_model-multiCOX_riskROC_",names(survival_dat_merge)[i],".pdf"))
par(oma=c(0.5,1,0,1),font.lab=1.5,font.axis=1.5)
plot(roc[[i]]$FP, roc[[i]]$TP, type="l", xlim=c(0,1), ylim=c(0,1),col='red',
xlab="False positive rate", ylab="True positive rate",
main=paste("ROC curve (", "AUC = ",round(roc[[i]]$AUC,3),")"),
lwd = 2, cex.main=1.3, cex.lab=1.2, cex.axis=1.2, font=1.2)
abline(0,1)
dev.off()
# multiCOX_Survival Curve
diff[[i]]=survdiff(Surv(time, status) ~risk[[i]],data = rt[[i]])
pValue[[i]]=1-pchisq(diff[[i]]$chisq,df=1)
pValue[[i]]=round(pValue[[i]],14)
fit[[i]] <- survfit(Surv(time/30, status) ~ risk[[i]], data = rt[[i]])
pdf(file=paste0("../dataset/COX_results/mutation_model-multiCOX_survival_curve_",names(survival_dat_merge)[i],".pdf"))
plot(fit[[i]], lty = 2:3,col=c("red","blue"),xlab="time (months)",
ylab="survival rate",
main=paste("survival curve (p=", pValue[[i]] ,")",sep=""),mark.time=T)
legend("topright", c("Low risk", "High risk"), lty = 2:3, col=c("blue","red"))
dev.off()
}
