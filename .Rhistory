<<<<<<< HEAD
options(stringsAsFactors = F)
files=list.files("../dataset/COX_results/")[grep("mutil_res_table_",list.files("../dataset/COX_results/"))]
files
files_single=list.files("../dataset/COX_results/")[grep("KM_res_single_TCGA_",list.files("../dataset/COX_results/"))]
files_single
types_single=gsub("KM_res_single_TCGA_","",files_single)%>%gsub(".csv","",.)
types_single
singleall<-list()
for (i in seq_along(files_single)) {
singleall[[i]]<-fread(paste0(path,files_single[i]))%>%as.data.frame()%>%mutate(Types=rep(types_single[i]),nrow(.))
names(singleall)[i]=types_single[i]
colnames(singleall[[i]])[1]="Gene"
}
head(singleall[[1]])
path="../dataset/COX_results/"
files=list.files("../dataset/COX_results/")[grep("mutil_res_table_",list.files("../dataset/COX_results/"))]
files
files_single=list.files("../dataset/COX_results/")[grep("KM_res_single_TCGA_",list.files("../dataset/COX_results/"))]
files_single
types_single=gsub("KM_res_single_TCGA_","",files_single)%>%gsub(".csv","",.)
types_single
singleall<-list()
for (i in seq_along(files_single)) {
singleall[[i]]<-fread(paste0(path,files_single[i]))%>%as.data.frame()%>%mutate(Types=rep(types_single[i]),nrow(.))
names(singleall)[i]=types_single[i]
colnames(singleall[[i]])[1]="Gene"
}
head(singleall[[1]])
km_MRgene<-bind_rows(singleall)
colnames(km_MRgene)[6]="geneNum"
head(km_MRgene)
coxall<-list()
path="../dataset/COX_results/"
for (i in seq_along(files)) {
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[1]="Gene"
}
types=gsub("mutil_res_table_","",files_single)%>%gsub(".csv","",.)
types
types=gsub("mutil_res_table_","",files)%>%gsub(".csv","",.)
types
files_single=list.files("../dataset/COX_results/")[grep("KM_res_single_TCGA_",list.files("../dataset/COX_results/"))]
files_single
types_single=gsub("KM_res_single_TCGA_","",files_single)%>%gsub(".csv","",.)
types_single
singleall<-list()
for (i in seq_along(files_single)) {
singleall[[i]]<-fread(paste0(path,files_single[i]))%>%as.data.frame()%>%mutate(Types=rep(types_single[i]),nrow(.))
names(singleall)[i]=types_single[i]
colnames(singleall[[i]])[1]="Gene"
}
head(singleall[[1]])
km_MRgene<-bind_rows(singleall)
colnames(km_MRgene)[6]="geneNum"
head(km_MRgene)
coxall<-list()
for (i in seq_along(files)) {
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[1]="Gene"
}
coxall[[1]]
sapply(coxall, nrow)
cox_MRgene<-bind_rows(coxall)
for (i in seq_along(files)) {
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
}
cox_MRgene<-bind_rows(coxall)
coxall[[1]]
for (i in seq_along(files)) {
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
}
coxall[[1]]
cox_MRgene<-bind_rows(coxall)
for (i in seq_along(files)) {
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
coxall[[1]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
coxall[[2]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
coxall[[3]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
coxall[[4]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
coxall[[5]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
test=coxall[[5]]
View(test)
test=coxall[[4]]
View(test)
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
sapply(coxall, length)
sapply(coxall, nrow)
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
if (norw(coxall[[i]])==1) {
next
}
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
norw(coxall[[1]])==1
norw(coxall[[1]])
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]$HR<-round(coxall[[i]]$HR,2)
if (nrow(coxall[[i]])==1) {
next
}
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
if (nrow(coxall[[i]])==1) {
next
}
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
sapply(coxall, nrow)
coxall<-list()
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
if (nrow(coxall[[i]])==1) {
next
}
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
sapply(coxall, nrow)
coxall[[4]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
cox_MRgene<-bind_rows(coxall)
coxall<-coxall[-which(sapply(coxall, nrow)==1)]
cox_MRgene<-bind_rows(coxall)
which(sapply(coxall, nrow)==1)
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
#coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
which(sapply(coxall, nrow)==1)
coxall<-coxall[-which(sapply(coxall, nrow)==1)]
sapply(coxall, nrow)
cox_MRgene<-bind_rows(coxall)
coxall<-coxall[-which(sapply(coxall, nrow)<=2)]
cox_MRgene<-bind_rows(coxall)
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
sapply(coxall, nrow)
coxall<-coxall[-which(sapply(coxall, nrow)<=2)]
cox_MRgene<-bind_rows(coxall)
cox_MRgene<-bind_rows(coxall[[1]],coxall[[2]])
cox_MRgene<-bind_rows(coxall[[1:3]])
cox_MRgene<-bind_rows(coxall[1:3])
for (i in seq_along(files)) {
print(i)
coxall[[i]]<-fread(paste0(path,files[i]))%>%as.data.frame()%>%mutate(Types=rep(types[i]),nrow(.))
names(coxall)[i]=types[i]
colnames(coxall[[i]])[c(1,3,4)]=c("Gene","HR","se")
coxall[[i]]%<>% mutate_all(funs(ifelse(is.na(.)&is.numeric(.),NA_character_,.)))
}
sapply(coxall, nrow)
coxall<-coxall[-which(sapply(coxall, nrow)==1)]
sapply(coxall, nrow)
cox_MRgene<-bind_rows(coxall[1:4])
cox_MRgene<-bind_rows(coxall[1:18])
cox_MRgene<-bind_rows(coxall[1:10])
cox_MRgene<-bind_rows(coxall[1:6])
cox_MRgene<-bind_rows(coxall[1:8])
cox_MRgene<-bind_rows(coxall[1:7])
cox_MRgene<-bind_rows(coxall[8:9])
cox_MRgene<-bind_rows(coxall[9:10])
test=coxall[[8]]
view(test)
is.na(test$coef)
which(is.na(test$HR))
which(is.numeric(test$HR))
test$HR[test$HR]
test$HR[which(is.numeric(test$HR))]
cox_MRgene<-bind_rows(coxall[c(1:8,9:10)])
cox_MRgene<-bind_rows(coxall[c(1:7,9:10)])
cox_MRgene<-bind_rows(coxall[c(1:7,9:16)])
cox_MRgene<-bind_rows(coxall[c(1:7)])
cox_MRgene<-bind_rows(coxall[c(9:16)])
cox_MRgene<-bind_rows(coxall[c(1:6,9:16)])
cox_MRgene<-bind_rows(coxall[c(7:9)])
cox_MRgene<-bind_rows(coxall[c(8:9)])
cox_MRgene<-bind_rows(coxall[c(6:7)])
sapply(coxall, nrow)
cox_MRgene<-bind_rows(coxall[c(7:8)])
coxall[[7]]$HR
cox_MRgene<-bind_rows(coxall[c(1:6,9:16)])
View(test)
View(test)
#ACC BLCA BRCA CESC CHOL COAD DLBC ESCA  GBM HNSC KICH KIRC KIRP LAML  LGG LIHC LUAD LUSC
#119   92  128   12   67  161  283  117  149  298  203  128  138   50    6   10  214   55
#MESO   OV PRAD SARC SKCM STAD
#27  177    1  121   21    6
MRgeneFC<-fread("../dataset/TCGA_data/microSignature_DEGtag.csv")
head(MRgeneFC)
length(unique(factor(km_MRgene$Gene)))
length(unique(factor(MRgeneFC$Gene)))
MRgeneKM<-merge(MRgeneFC,km_MRgene,by=c("Gene","Types"))
head(MRgeneKM)
MRgeneKM$HR<-MRgeneKM$`HR (95% CI for HR)`
MRgeneKM$HR<-gsub(" .*","",MRgeneKM$HR)%>%as.numeric()
head(MRgeneKM)
summary(MRgeneKM)
MRgeneKM$group<-MRgeneKM$HR
MRgeneKM$group<-ifelse(MRgeneKM$Log2FC<=-2&MRgeneKM$HR>=1.5,"HR1.5_FCd2",
ifelse(MRgeneKM$Log2FC<=-2&MRgeneKM$HR<=0.5,"HR0.5_FCd2",
ifelse(MRgeneKM$Log2FC>=2&MRgeneKM$HR>=1.5,"HR1.5_FCu2",
ifelse(MRgeneKM$Log2FC>=2&MRgeneKM$HR<=0.5,"HR0.5_FCu2","NO"))))
levels(factor(MRgeneKM$group))
p<-ggplot(MRgeneKM,aes(Log2FC,HR,color=group))+
geom_point(aes(alpha = 0.6,size=-log10(p.value)), show.legend = FALSE)+
scale_size(range = c(0, 4))+
geom_vline(xintercept = c(-2, 2), color = 'gray', linetype = 2, size = 1) +
geom_hline(yintercept = c(0.5,1.5), color = 'gray', linetype = 2, size = 1)+
scale_color_manual(limits = c('HR1.5_FCd2', 'HR0.5_FCd2', 'HR1.5_FCu2', 'HR0.5_FCu2', 'NO'),
values = c('red', 'orange', 'purple', 'blue', 'gray'))+
theme_classic2()
MRgeneKM$label=ifelse(abs(MRgeneKM$Log2FC)>=2&(MRgeneKM$HR>=1.5|MRgeneKM$HR<=0.5),MRgeneKM$Gene,"")
p+geom_text_repel(data=MRgeneKM,aes(Log2FC,HR,label=label),
size = 3,box.padding = unit(0.5, "lines"),
point.padding = unit(0.8, "lines"),
segment.color = "black",
show.legend = FALSE)
keygenes=subset(MRgeneKM,label!="")
View(keygenes)
colnames(keygenes)
ggdotchart(keygenes, x="Gene", y="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "cyl", dot.size = 6,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
ggdotchart(keygenes, x="Gene", y="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "Types", dot.size = 6,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
p=ggdotchart(keygenes, x="Gene", y="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "Types", dot.size = 6,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
p+geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
p=ggdotchart(keygenes, x="Gene", y="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "Types", dot.size = 4,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
p+geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
p=ggdotchart(keygenes, y="Gene", x="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "Types", dot.size = 4,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
p+geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
p=ggdotchart(keygenes, x="Gene", y="HR", color = "Types",
#palette = c("#00AFBB", "#E7B800", "#FC4E07"),
sorting = "descending", add = "segments", rotate = TRUE,
group = "Types", dot.size = 4,
label = round(keygenes$HR,2), font.label = list(color="white",
size=9, vjust=0.5), ggtheme = theme_pubr())
p+geom_hline(yintercept = 0, linetype = 2, color = "lightgray")
library(survival)
library(survminer)
library(reshape2)
library(data.table)
library(stringr)
library(reshape2)
library(dplyr)
library(plyr)
library(survivalROC)
library(forestplot)
options(stringsAsFactors = F)
load(file = "../dataset/TCGA_results/TCGAMRegnesHeatmap.Rdata")
cli<-fread("../dataset/TCGA_data/TCGA_cli_new.csv")%>%as.data.frame()
cli[1:3,1:3]
MRscoreall[1:3,1:3]
MRscoreall$sampleID<-str_sub(MRscoreall$sampleID,1,12)
meta<-merge(MRscoreall,cli[,-2],by="sampleID")
colnames(exprall)<-str_sub(colnames(exprall),1,12)
exprall[1:3,1:3]
colnames(meta)
levels(factor(meta$Treatment_outcome))
meta$Treatment_outcome<-ifelse(meta$Treatment_outcome=="Complete Remission/Response","CR",
ifelse(meta$Treatment_outcome=="Partial Remission/Response" ,"PR",
ifelse(meta$Treatment_outcome=="Persistent Disease","PD",
ifelse(meta$Treatment_outcome=="Progressive Disease","PD",
ifelse(meta$Treatment_outcome=="Stable Disease","SD","NA")))))
meta$Response<-ifelse(meta$Treatment_outcome=="PD","NR",
ifelse(meta$Treatment_outcome=="NA","NA","R"))
levels(factor(meta$Treatment_outcome))
levels(factor(meta$Response))
#癌症零期（Stage 0）：检测到异常细胞，但异常细胞没有扩散到别处，这个时期也称为原位癌（carcinoma in situ）
meta$Stage<-meta$AJCC_stage
meta$Stage<-gsub("Stage III[A-C]","High_stage",meta$Stage)
meta$Stage<-gsub("Stage IV[A-C]","High_stage",meta$Stage)
meta$Stage<-gsub("Stage II[A-C]","Low_stage",meta$Stage)
meta$Stage<-gsub("Stage I[A-C]","Low_stage",meta$Stage)
meta$Stage<-gsub("Stage III","High_stage",meta$Stage)
meta$Stage<-gsub("Stage IV","High_stage",meta$Stage)
meta$Stage<-gsub("Stage II","Low_stage",meta$Stage)
meta$Stage<-gsub("Stage I","Low_stage",meta$Stage)
meta$Stage<-ifelse(meta$Stage=="High_stage"|meta$Stage=="Low_stage",meta$Stage,"NA")
levels(factor(meta$Stage))
levels(factor(meta$Gender))
colnames(meta)
data<-subset(meta,Stage!="NA")
g2<-surv_cutpoint(
data,
time = "OStime",
event = "OS",
variables = c("Age")
)
summary(g2)
plot(g2)#Age==65
data$MRscore<-ifelse(data$MRscore>=median(data$MRscore),"High_MRscore","Low_MRscore")
data$Age<-ifelse(data$Age>=65,"High_age","Low_age")
coxfit<-coxph(Surv(OStime,OS) ~ MRscore+Stage+Age+Gender,data = data)
p<-forest_model(coxfit,factor_separate_line=F,
format_options = list(colour= "black",
shape = 12,
text_size = 4,
banded = T),
theme = theme_forest())
p
covariates<-list("MRscore","Stage","Age","Gender")
##glmnet continus variables cox
library(glmnet)
library(survival)
d <- myTestData
colnames(meta)
range(meta$Age)
View(meta)
d <- meta
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
d <- meta
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
x <- model.matrix( ~ MRscore, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
y
cv.fit <- cv.glmnet(x, y, family="cox", alpha=1)
cv_fit <- cv.glmnet(x, y, nfolds = 5) #just with numeric variables
View(meta)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
nrow(d)
nrow(meta)
d<-subset(d,OS!=NA)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
View(d)
d<-subset(d,Age!="NA")
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
range(d$OStime)
View(d)
d$OStime=d$OStime/30
range(d$OStime)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")
d$OStime=d$OStime/30%>%as.numeric()
range(d$OStime)
View(d)
d$OStime=round(d$OStime/30,2)%>%as.numeric()
View(d)
x <- model.matrix( ~ MRscore + Age + Stage, d)
y <- Surv(d$OStime, d$OS)
fit <- glmnet(x, y, family="cox", alpha=1)
summary(d$OStime)
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, family="cox", alpha=1)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, family="cox", alpha=1)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(d,Stage!="NA")
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,Stage!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, family="cox", alpha=1)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,(OStime!="NA")
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,OStime!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, family="cox", alpha=1)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,OStime!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, family="cox", alpha=1)
cv.fit <- cv.glmnet(x, y, family="cox", alpha=1)
sum(y<0)
sum(d$OStime)
sum(d$OStime<0)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, alpha=1)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,OStime!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age , d)
fit <- glmnet(x, y, alpha=1)
y
y
y <- Surv(d$OStime, d$OS)
x <- model.matrix( ~ MRscore + Age , d)
fit <- glmnet(x, y, alpha=1)
View(x)
fit <- glmnet(x, y, alpha=1,family = "cox")
d=d[1:100,]
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, alpha=1,family="cox")
View(d)
fit <- glmnet(x, y, alpha=1,family="mgaussian")
plot(fit, label=T)
d <- subset(meta,select = c(OStime,OS,MRscore,Age,Stage))
d<-subset(d,Age!="NA")%>%subset(.,OStime!="NA")
d$OStime=round(d$OStime/30,2)%>%as.numeric()
y <- Surv(d$OStime, d$OS)
x <- model.matrix(y ~ MRscore + Age + Stage, d)
fit <- glmnet(x, y, alpha=1,family="mgaussian")
plot(fit, label=T)
cv.fit <- cv.glmnet(x, y, family="cox", alpha=1)
cv_fit <- cv.glmnet(x, y, nfolds = 5) #just with numeric variables
##Arachidonic acid  M360T43_1
setwd("/Volumes/D/16S_results20190711/Mutiple_Omics/dataMatrix/")
source("./myPackages.R")
source("myPackages.R")
getwd()
##Arachidonic acid  M360T43_1
setwd("/Volumes/D/16S_results20190711/Mutiple_Omics/")
source("myPackages.R")
BiocManager::install("sysfonts")
BiocManager::install("sysfonts")
source("myPackages.R")
library(sysfonts)
source("myPackages.R")
BiocManager::install("sysfonts")
BiocManager::install("sysfonts")
chooseBioCmirror()
BiocManager::install("sysfonts")
source("myPackages.R")
library(sysfonts)
genus_ab<-read.csv("genus_ab.csv",header = T,row.names = 1)
all_taxon<-read.csv("taxon_reads.csv",header = T)%>% filter(Average >=10)
=======
event = "OS",
variables = c("Age")
)
summary(g2)
plot(g2)#Age==65
data$MRscore<-ifelse(data$MRscore>=median(data$MRscore),"High_MRscore","Low_MRscore")
data$Age<-ifelse(data$Age>=65,"High_age","Low_age")
coxfit<-coxph(Surv(OStime,OS) ~ MRscore+Stage+Age+Gender,data = data)
p<-forest_model(coxfit,factor_separate_line=F,
format_options = list(colour= "black",
shape = 12,
text_size = 4,
banded = T),
theme = theme_forest())
p
library(survival)
library(survminer)
library(reshape2)
library(data.table)
library(stringr)
library(reshape2)
library(dplyr)
library(plyr)
library(survivalROC)
library(forestplot)
p<-forest_model(coxfit,factor_separate_line=F,
format_options = list(colour= "black",
shape = 12,
text_size = 4,
banded = T),
theme = theme_forest())
library(forestmodel)
p<-forest_model(coxfit,factor_separate_line=F,
format_options = list(colour= "black",
shape = 12,
text_size = 4,
banded = T),
theme = theme_forest())
p
covariates<-list("MRscore","Stage","Age","Gender")
univ_formulas<-list()
for (i in seq_len(length(covariates))) {
univ_formulas[[i]] <- sapply(covariates[[i]],
function(x){
##print(x)
as.formula(paste('Surv(OStime, OS)~', x))
})
}
levels(factor(data$MRscore))
#cox indifferent stage
cox<- coxph(Surv(OStime, OS)~MRscore, data = subset(data,Stage=="How_stage"))
levels(factor(data$Stage))
head(data)
#cox indifferent stage
cox<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="High_stage"))
#cox indifferent stage
cox<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="High_stage"))
mutil_res<-summary(cox)
mutil_res
mutil_res_table<-as.data.frame(cbind(mutil_res$coefficients,mutil_res$conf.int[,-c(1,2)]))
#cox indifferent stage
cox<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
mutil_res<-summary(cox)
mutil_res_table<-as.data.frame(cbind(mutil_res$coefficients,mutil_res$conf.int[,-c(1,2)]))
summary(cox)
summary(cox_early)
#cox indifferent stage
cox_early<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
summary(cox_early)
summary(cox_late)
colnames(data)
#cox indifferent stage
cox_early_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_early_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_early_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(data,Stage=="Low_stage"))
summary(cox_early_OS)
summary(cox_late_OS)
summary(cox_early_PFI)
summary(cox_late_PFI)
summary(cox_early_DSS)
summary(cox_late_DSS)
cox_res<-cox_early_OS
res_table<-as.data.frame(cbind(cox_res$coefficients,cox_res$conf.int[,-c(1,2)]))
res_table
cox_res$coefficients
cox_res<-summary(cox_early_OS)
res_table<-as.data.frame(cbind(cox_res$coefficients,cox_res$conf.int[,-c(1,2)]))
View(res_table)
cox_res$conf.int
cox_res$coefficients
res_table<-as.data.frame(bind_cols(cox_res$coefficients,cox_res$conf.int[,-c(1,2)]))
View(res_table)
cox_res<-list()
cox_res$early_OS<-summary(cox_early_OS)
cox_res$early_OS<-summary(cox_early_OS)
cox_res$early_PFI<-summary(cox_early_PFI)
cox_res$late_PFI<-summary(cox_late_PFI)
cox_res$late_OS<-summary(cox_late_OS)
cox_res$early_DSS<-summary(cox_early_DSS)
cox_res$late_DSS<-summary(cox_late_DSS)
res_table<-subset(res_table,`Pr(>|z|)`<=0.05)
View(res_table)
res_table<-as.data.frame(cbind(cox_res$coefficients,cox_res$conf.int[,-c(1,2)]))
for(i in c(1:6)){
res_table[[i]]<-as.data.frame(cbind(cox_res[[i]]$coefficients,
cox_res[[i]]$conf.int[,-c(1,2)]))
}
res_table[[1]]
res_table[[2]]
cox_res$early_OS<-summary(cox_early_OS)
cox_res$late_OS<-summary(cox_late_OS)
cox_res$early_PFI<-summary(cox_early_PFI)
cox_res$late_PFI<-summary(cox_late_PFI)
cox_res$early_DSS<-summary(cox_early_DSS)
cox_res$late_DSS<-summary(cox_late_DSS)
cox_res$early_OS$concordance
cox_res$early_OS$coefficients
cox_res$late_DSS$concordance
cox_res$late_DSS
cox_res$early_OS$coefficients
cox_res$late_DSS$concordance
res_table<-
res_table<-bind_cols(list(cox_res$early_OS$coefficients
,cox_res$early_OS$conf.int[,-c(1,2)]
,cox_res$late_DSS$concordance))
data.frame(cox_res$early_OS$coefficients)
res_table<-bind_cols(list(data.frame(cox_res$early_OS$coefficients)
)
)))
res_table<-
res_table<-bind_cols(list(data.frame(cox_res$early_OS$coefficients)
,data.frame(cox_res$early_OS$conf.int[,-c(1,2)])
,data.frame(cox_res$late_DSS$concordance)))
res_table<-
res_table<-cbind(data.frame(cox_res$early_OS$coefficients)
,data.frame(cox_res$early_OS$conf.int[,-c(1,2)])
,data.frame(cox_res$late_DSS$concordance))
res_table<-
res_table<-cbind((cox_res$early_OS$coefficients)
,cox_res$early_OS$conf.int[,-c(1,2)]
,cox_res$late_DSS$concordance)
View(res_table)
res_table<-cox_res$early_OS$coefficients%>%append(cox_res$early_OS$concordance)
View(res_single)
res_table
res_table<-table(cox_res$early_OS$coefficients)%>%
append(cox_res$early_OS$concordance)%>%
append(cox_res$early_OS$conf.int)
res_table
res_table<-table(cox_res$early_OS$coefficients)%>%
with(cox_res$early_OS$concordance)%>%
append(cox_res$early_OS$conf.int)
res_table<-as.data.frame(cox_res$early_OS$coefficients)%>%
append(cox_res$early_OS$concordance)%>%
append(cox_res$early_OS$conf.int)
View(res_table)
res_table
cox_res$early_OS<-summary(cox_early_OS)$coefficients
cox_res$late_OS<-summary(cox_late_OS)$coefficients
cox_res$early_PFI<-summary(cox_early_PFI)$coefficients
cox_res$late_PFI<-summary(cox_late_PFI)$coefficients
cox_res$early_DSS<-summary(cox_early_DSS)$coefficients
cox_res$late_DSS<-summary(cox_late_DSS)$coefficients
cox_res$early_OS<-summary(cox_early_OS)$coefficients%>%mutate(Group=early_OS)
cox_res$late_OS<-summary(cox_late_OS)$coefficients%>%mutate(Group=early_OS)
cox_res$early_PFI<-summary(cox_early_PFI)$coefficients%>%mutate(Group=early_PFI)
cox_res$early_OS<-summary(cox_early_OS)$coefficients%>%mutate(Group="early_OS")
cox_res$early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")
cox_res$early_OS
cox_res$early_OS<-summary(cox_early_OS)$coefficients%>%
data.frame()%>%mutate(Group="early_OS")
cox_res$early_OS
summary(cox_early_OS)$coefficients
cox_res$early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame(row.names = rownames(.))%>%mutate(Group="early_OS")
cox_res$early_OS
rownames(summary(cox_early_OS)$coefficients)
cox_res$early_OS<-as.data.frame(summary(cox_early_OS)$coefficients)%>%mutate(Group="early_OS")
cox_res$early_OS
cox_res$early_OS<-as.data.frame(row.names = rownames(summary(cox_early_OS)$coefficients),summary(cox_early_OS)$coefficients)%>%mutate(Group="early_OS")
cox_res$early_OS
coef_early_OS<-summary(cox_early_OS)$coefficients%>%mutate(Variables=rownames(.))%>%
as.data.frame()%>%mutate(Group="early_OS")
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%mutate(Variables=rownames(.))
View(coef_early_OS)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%mutate(Variables=rownames(.))
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%mutate(Variables=rownames(summary(cox_early_OS)))
View(coef_early_OS)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%mutate(Variables=rownames(summary(cox_early_OS)))
View(coef_early_OS)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)))
coef_early_OS
rownames(summary(cox_early_OS))
summary(cox_early_OS
)
find_number<-function(number,excel_from,excel_to){
fromNum<-colnames(excel_from)[grep(number,colnames(excel_from))]
toNum<-colnames(excel_to)[grep(number,colnames(excel_to))]
}
excel_from<-data.frame(a=sample(c(1:1000),100),a=sample(c(100:500),100))
excel_from
excel_B<-data.frame(a=sample(c(1:1000),100),a=sample(c(100:500),100))
excel_A<-data.frame(a=sample(c(2:100),50),a=sample(c(100:300),50))
find_number<-function(number,excel_A,excel_B){
from_Num<-colnames(excel_from)[grep(number,colnames(excel_from))]
to_Num<-colnames(excel_to)[grep(number,colnames(excel_to))]
return(list(from_Num,to_Num))
}
find_number<-function(number,excel_A,excel_B){
from_Num<-colnames(excel_from)[grep(number,colnames(excel_A))]
to_Num<-colnames(excel_to)[grep(number,colnames(excel_B))]
message(paste0(number,"in",from_Num,"row","of excel_A"))
message(paste0(number,"in",to_Num,"row","of excel_B"))
return(list(from_Num,to_Num))
}
excel_B<-data.frame(col_a1=sample(c(1:1000),100),col_b1=sample(c(100:500),100))
excel_A<-data.frame(col_a2=sample(c(2:100),50),col_b2=sample(c(100:300),50))
find_number<-function(number,
excel_A,excel_B,
names_col_A,names_col_B){
from_Num<-excel_A[,names_col_A][grep(number,excel_A[,names_col_A])]
to_Num<-excel_B[,names_col_B][grep(number,excel_B[,names_col_B])]
message(paste0(number,"in",from_Num,"row","of excel_A"))
message(paste0(number,"in",to_Num,"row","of excel_B"))
return(list(from_Num,to_Num))
}
excel_B
find_number<-function(number,
excel_A,excel_B,
names_col_A,names_col_B){
from_Num<-excel_A[,names_col_A][grep(number,excel_A[,names_col_A])]
to_Num<-excel_B[,names_col_B][grep(number,excel_B[,names_col_B])]
message(paste0(number,"in",from_Num,"row","of excel_A"))
message(paste0(number,"in",to_Num,"row","of excel_B"))
return(list(from_Num,to_Num))
}
find_number(number = "25",excel_A ,excel_B,names_col_A = col_a1,excel_B =col_a2 )
find_number(number = "25",excel_A ,excel_B,names_col_A = "col_a1",names_col_B = "col_a2")
find_number(number = "25",excel_A ,excel_B,
names_col_A = "col_a2",
names_col_B = "col_a1")
excel_B<-data.frame(col_a2=sample(c(1:1000),100),col_b2=sample(c(100:500),100))
excel_A<-data.frame(col_a1=sample(c(2:100),50),col_b1=sample(c(100:300),50))
find_number<-function(number,
excel_A,excel_B,
names_col_A,names_col_B){
from_Num<-excel_A[,names_col_A][grep(number,excel_A[,names_col_A])]
to_Num<-excel_B[,names_col_B][grep(number,excel_B[,names_col_B])]
message(paste0(number," in ",from_Num," ",names_col_A," of excel_A"))
message(paste0(number,"in",to_Num," ", names_col_B," of excel_B"))
}
find_number(number = "25",
excel_A ,excel_B,
names_col_A = "col_a1",
names_col_B = "col_a2")
find_number<-function(number,
excel_A,excel_B,
names_col_A,names_col_B){
from_Num<-excel_A[,names_col_A][grep(number,excel_A[,names_col_A])]
to_Num<-excel_B[,names_col_B][grep(number,excel_B[,names_col_B])]
message(paste0(number," is in ",from_Num," ",names_col_A," of excel_A"))
message(paste0(number," is in",to_Num," ", names_col_B," of excel_B"))
}
find_number(number = "25",
excel_A ,excel_B,
names_col_A = "col_a1",
names_col_B = "col_a2")
\
find_number(number = "25",
excel_A ,excel_B,
names_col_A = "col_a1",
names_col_B = "col_a2")
find_number(number = "25",
excel_A ,excel_B,
names_col_A = "col_a1",
names_col_B = "col_a2")
names(summary(cox_early_OS)$coefficients)
names(summary(cox_early_OS))
rownames(summary(cox_early_OS)$coefficients)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%mutate(test=rownames(.))%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)))
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))
coef_early_OS
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))
coef_late_OS<-summary(cox_late_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_OS")%>%
mutate(Variables=rownames(summary(cox_late_OS)$coefficients))
coef_early_PFI<-summary(cox_early_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="early_PFI")%>%
mutate(Variables=rownames(summary(cox_eearly_PFI)$coefficients))
coef_late_PFI<-summary(cox_late_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="late_PFI")%>%
mutate(Variables=rownames(summary(cox_late_PFI)$coefficients))
coef_early_DSS<-summary(cox_early_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_DSS")%>%
mutate(Variables=rownames(summary(cox_early_DSS)$coefficients))
coef_early_PFI<-summary(cox_early_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="early_PFI")%>%
mutate(Variables=rownames(summary(cox_early_PFI)$coefficients))
coef_late_PFI<-summary(cox_late_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="late_PFI")%>%
mutate(Variables=rownames(summary(cox_late_PFI)$coefficients))
coef_early_DSS<-summary(cox_early_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_DSS")%>%
mutate(Variables=rownames(summary(cox_early_DSS)$coefficients))
coef_late_DSS<-summary(cox_late_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_DSS")%>%
mutate(Variables=rownames(summary(cox_late_DSS)$coefficients))
coef_late_OS
coef=bind_cols(list(coef_early_OS,coef_late_OS,
coef_early_PFI, coef_late_PFI,
coef_early_DSS, coef_late_DSS))
View(coef)
coef=bind_rows(list(coef_early_OS,coef_late_OS,
coef_early_PFI, coef_late_PFI,
coef_early_DSS, coef_late_DSS))
coef
summary(cox_early_OS)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%bind_cols(summary(cox_early_OS)$Concordance)
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))%>%
bind_cols(summary(cox_early_OS)$Concordance)
coef_early_OS
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))%>%
cbind(.,summary(cox_early_OS)$Concordance)
#cox indifferent stage
cox_early_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="High_stage"))
cox_late_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(data,Stage=="High_stage"))
cox_early_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_early_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(data,Stage=="Low_stage"))
cox_late_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(data,Stage=="High_stage"))
cox_res<-list()
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))%>%
cbind(.,summary(cox_early_OS)$Concordance)
coef_late_OS<-summary(cox_late_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_OS")%>%
mutate(Variables=rownames(summary(cox_late_OS)$coefficients))
coef_early_PFI<-summary(cox_early_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="early_PFI")%>%
mutate(Variables=rownames(summary(cox_early_PFI)$coefficients))
coef_late_PFI<-summary(cox_late_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="late_PFI")%>%
mutate(Variables=rownames(summary(cox_late_PFI)$coefficients))
coef_early_DSS<-summary(cox_early_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_DSS")%>%
mutate(Variables=rownames(summary(cox_early_DSS)$coefficients))
coef_late_DSS<-summary(cox_late_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_DSS")%>%
mutate(Variables=rownames(summary(cox_late_DSS)$coefficients))
coef=bind_rows(list(coef_early_OS,coef_late_OS,
coef_early_PFI, coef_late_PFI,
coef_early_DSS, coef_late_DSS))
res_table<-as.data.frame(cox_res$early_OS$coefficients)%>%
append(cox_res$early_OS$concordance)%>%
append(cox_res$early_OS$conf.int)
View(coef)
#cox indifferent stage
cox_early_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(meta,Stage=="Low_stage"))
meta$MRscore[1:3]
View(coef)
View(meta)
summary(cox_early_OS)
#cox indifferent stage
cox_early_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(meta,Stage=="Low_stage"))
cox_late_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(data,Stage=="High_stage"))
cox_early_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(meta,Stage=="Low_stage"))
cox_late_PFI<- coxph(Surv(PFItime, PFI)~MRscore,
data = subset(meta,Stage=="High_stage"))
cox_early_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(meta,Stage=="Low_stage"))
cox_late_DSS<- coxph(Surv(DSStime, DSS)~MRscore,
data = subset(meta,Stage=="High_stage"))
cox_res<-list()
coef_early_OS<-summary(cox_early_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))%>%
cbind(.,summary(cox_early_OS)$Concordance)
coef_late_OS<-summary(cox_late_OS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_OS")%>%
mutate(Variables=rownames(summary(cox_late_OS)$coefficients))
coef_early_PFI<-summary(cox_early_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="early_PFI")%>%
mutate(Variables=rownames(summary(cox_early_PFI)$coefficients))
coef_late_PFI<-summary(cox_late_PFI)$coefficients%>%
as.data.frame()%>%mutate(Group="late_PFI")%>%
mutate(Variables=rownames(summary(cox_late_PFI)$coefficients))
coef_early_DSS<-summary(cox_early_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_DSS")%>%
mutate(Variables=rownames(summary(cox_early_DSS)$coefficients))
coef_late_DSS<-summary(cox_late_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="late_DSS")%>%
mutate(Variables=rownames(summary(cox_late_DSS)$coefficients))
coef=bind_rows(list(coef_early_OS,coef_late_OS,
coef_early_PFI, coef_late_PFI,
coef_early_DSS, coef_late_DSS))
View(clinic7706)
summary(cox_early_OS)
Cindex_early_OS<-summary(cox_early_OS)$Concordance%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
mutate(Variables=rownames(summary(cox_early_OS)$Concordance))%>%
cbind(.,summary(cox_early_OS)$Concordance)
Cindex_early_OS
Cindex_early_OS<-summary(cox_early_OS)$Concordance%>%
as.data.frame()%>%mutate(Group="early_OS")%>%
cbind(.,summary(cox_early_OS)$Concordance)
Cindex_early_OS
summary(cox_early_OS)$Concordance
summary(cox_early_OS)
summary(cox_early_OS)
Cindex_early_OS<-cox_early_OS$concordance%>%
cbind(.,summary(cox_early_OS)$Concordance)
Cindex_early_OS
test=summary(cox_early_OS)
test$concordance
summary(cox_early_OS)$concordance
Cindex_early_OS<-summary(cox_early_OS)$concordance%>%
cbind(.,summary(cox_early_OS)$Concordance)
Cindex_early_OS
rownames(summary(cox_early_OS)$Concordance)
coef_early_DSS<-summary(cox_early_DSS)$coefficients%>%
as.data.frame()%>%mutate(Group="early_DSS")%>%
mutate(Variables=rownames(summary(cox_early_DSS)$coefficients))
coef_early_DSS
Cindex_early_OS<-summary(cox_early_OS)$concordance%>%
mutate(Variables=rownames(summary(cox_early_OS)$Concordance))
Cindex_early_OS<-summary(cox_early_OS)$concordance%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))
Cindex_early_OS<-summary(cox_early_OS)$concordance%>%
as.data.frame()%>%
mutate(Variables=rownames(summary(cox_early_OS)$coefficients))
Cindex_early_OS
riskScore=predict(coef_early_OS,type="risk",newdata=meta)
#cox indifferent stage
cox_early_OS<- coxph(Surv(OStime, OS)~MRscore,
data = subset(meta,Stage=="Low_stage"))
riskScore=predict(cox_early_OS,type="risk",newdata=meta)
risk=as.vector(ifelse(riskScore>1,"high","low"))
COX_risk_result<-cbind(id=rownames(cbind(meta[,8:9],riskScore,risk)),
cbind(data[,8:9],riskScore,risk))
data = subset(meta,Stage=="Low_stage")
data = subset(meta,Stage=="Low_stage")
riskScore=predict(cox_early_OS,type="risk",newdata=data)
risk=as.vector(ifelse(riskScore>1,"high","low"))
COX_risk_result<-cbind(id=rownames(cbind(data[,8:9],riskScore,risk)),
cbind(data[,8:9],riskScore,risk))
write.csv(COX_risk_result,"../dataset/TCGA_cox/MRscore_COX_riskinEarlystage.csv")
rt=read.csv("../dataset/TCGA_cox/MRscore_COX_riskinEarlystage.csv",check.names=F,row.names=1)
roc=survivalROC(Stime=rt$OStime, status=rt$OS, marker = rt$riskScore,
predict.time =3, method="KM")
pdf(file=paste0("../dataset/TCGA_cox/MRscore_COX_riskROC_early.pdf"))
par(oma=c(0.5,1,0,1),font.lab=1.5,font.axis=1.5)
plot(roc$FP, roc$TP, type="l", xlim=c(0,1), ylim=c(0,1),col='red',
xlab="False positive rate", ylab="True positive rate",
main=paste("ROC curve (", "AUC = ",round(roc$AUC,3),")"),
lwd = 2, cex.main=1.3, cex.lab=1.2, cex.axis=1.2, font=1.2)
abline(0,1)
plot(roc$FP, roc$TP, type="l", xlim=c(0,1), ylim=c(0,1),col='red',
xlab="False positive rate", ylab="True positive rate",
main=paste("ROC curve (", "AUC = ",round(roc$AUC,3),")"),
lwd = 2, cex.main=1.3, cex.lab=1.2, cex.axis=1.2, font=1.2)
abline(0,1)
fit<- survfit(Surv(OStime/30, OS) ~ risk, data = rt)
diff=survdiff(Surv(OStime/30, OS) ~risk,data = rt)
pValue=1-pchisq(diff$chisq,df=1)
pValue=round(pValue,14)
plot(fit, lty = 2:3,col=c("red","blue"),xlab="time (months)",
ylab="survival rate",
main=paste("survival curve (p=", pValue ,")",sep=""),mark.time=T)
legend("topright", c("Low risk", "High risk"), lty = 2:3, col=c("blue","red"))
>>>>>>> 6255cae2aadc6bf9f411b1ac81dc243fbe02c9cf
